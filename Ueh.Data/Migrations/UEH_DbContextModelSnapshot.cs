// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Ueh.Data.EF;

#nullable disable

namespace Ueh.Data.Migrations
{
    [DbContext(typeof(UEH_DbContext))]
    partial class UEH_DbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.3")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Ueh.Data.Entities.Dangkytruoc", b =>
                {
                    b.Property<Guid>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("madot")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("magv")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("maloai")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("mssv")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<bool>("status")
                        .HasColumnType("bit");

                    b.HasKey("id");

                    b.HasIndex("madot");

                    b.HasIndex("magv");

                    b.HasIndex("maloai");

                    b.HasIndex("mssv");

                    b.ToTable("Dangkytruocs", (string)null);
                });

            modelBuilder.Entity("Ueh.Data.Entities.Dot", b =>
                {
                    b.Property<string>("maDot")
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateTime>("endDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("starDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("status")
                        .HasColumnType("bit");

                    b.Property<string>("tenDot")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("maDot");

                    b.ToTable("Dots", (string)null);
                });

            modelBuilder.Entity("Ueh.Data.Entities.Giangvien", b =>
                {
                    b.Property<string>("magv")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("makhoa")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("tengv")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("magv");

                    b.HasIndex("makhoa");

                    b.ToTable("Giangviens", (string)null);
                });

            modelBuilder.Entity("Ueh.Data.Entities.Khoa", b =>
                {
                    b.Property<string>("makhoa")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("tenkhoa")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("makhoa");

                    b.ToTable("Khoas", (string)null);
                });

            modelBuilder.Entity("Ueh.Data.Entities.Loai", b =>
                {
                    b.Property<string>("maloai")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("tenloaij")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("maloai");

                    b.ToTable("Loais", (string)null);
                });

            modelBuilder.Entity("Ueh.Data.Entities.Student", b =>
                {
                    b.Property<string>("mssv")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("HDT")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Khoamakhoa")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("birthday")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("birthplace")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("className")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("classStudentName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("faculty")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("fullName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("idCard")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("phoneNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("studyStatusId")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("mssv");

                    b.HasIndex("Khoamakhoa");

                    b.ToTable("Students", (string)null);
                });

            modelBuilder.Entity("Ueh.Data.Entities.Dangkytruoc", b =>
                {
                    b.HasOne("Ueh.Data.Entities.Dot", "Dot")
                        .WithMany("dangkytruocsList")
                        .HasForeignKey("madot")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK_DangKyTruoc_Dot");

                    b.HasOne("Ueh.Data.Entities.Giangvien", "Giangvien")
                        .WithMany("dangkytruocs")
                        .HasForeignKey("magv")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK_DangKyTruoc_GiangVien");

                    b.HasOne("Ueh.Data.Entities.Loai", "Loai")
                        .WithMany("dangkytruocs")
                        .HasForeignKey("maloai")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK_DangKyTruoc_Loai");

                    b.HasOne("Ueh.Data.Entities.Student", "Student")
                        .WithMany("dangkytruoc")
                        .HasForeignKey("mssv")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK_DangKyTruoc_Student");

                    b.Navigation("Dot");

                    b.Navigation("Giangvien");

                    b.Navigation("Loai");

                    b.Navigation("Student");
                });

            modelBuilder.Entity("Ueh.Data.Entities.Giangvien", b =>
                {
                    b.HasOne("Ueh.Data.Entities.Khoa", "khoa")
                        .WithMany("giangviens")
                        .HasForeignKey("makhoa")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK_GangVien_Khoa");

                    b.Navigation("khoa");
                });

            modelBuilder.Entity("Ueh.Data.Entities.Student", b =>
                {
                    b.HasOne("Ueh.Data.Entities.Khoa", null)
                        .WithMany("students")
                        .HasForeignKey("Khoamakhoa");
                });

            modelBuilder.Entity("Ueh.Data.Entities.Dot", b =>
                {
                    b.Navigation("dangkytruocsList");
                });

            modelBuilder.Entity("Ueh.Data.Entities.Giangvien", b =>
                {
                    b.Navigation("dangkytruocs");
                });

            modelBuilder.Entity("Ueh.Data.Entities.Khoa", b =>
                {
                    b.Navigation("giangviens");

                    b.Navigation("students");
                });

            modelBuilder.Entity("Ueh.Data.Entities.Loai", b =>
                {
                    b.Navigation("dangkytruocs");
                });

            modelBuilder.Entity("Ueh.Data.Entities.Student", b =>
                {
                    b.Navigation("dangkytruoc");
                });
#pragma warning restore 612, 618
        }
    }
}
